/***********************************************************************************************
 * @(#)Publisher.java
 * 
 * Version: 1.0
 * 
 * Date: 2014/09/03
 * 
 * Copyright (c) 2014 Thiago Alexandre Martins Monteiro.
 * 
 * All rights reserved. This program and the accompanying materials are made 
 * available under the terms of the GNU Public License v2.0 which accompanies 
 * this distribution, and is available at http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 * 
 * Contributors:
 *    Thiago Alexandre Martins Monteiro - initial API and implementation
 ************************************************************************************************/

package app.models;

import jedi.db.Models;

import jedi.db.models.CharField;
import jedi.db.models.ForeignKeyField;
import jedi.db.models.Manager;
import jedi.db.models.Model;
import jedi.db.models.QuerySet;

/**
 * <h2>Classe que modela uma editora.</h2>
 * <h3>Código:</h3>
 * <pre>
 * <code class="java">
 * package app.models;
 * 
 * import jedi.db.Models;
 * 
 * import jedi.db.models.CharField;
 * import jedi.db.models.ForeignKeyField;
 * import jedi.db.models.Manager;
 * import jedi.db.models.Model;
 * import jedi.db.models.QuerySet;
 * 
 * public class Publisher extends Model {
 * 
 *     // Attributes
 *     private static final long serialVersionUID = -4632483608458698726L;
 *     
 *    {@literal @}CharField(max_length = 30)
 *     private String name;
 *     
 *    {@literal @}CharField(max_length = 50, required = false)
 *     private String address;
 *     
 *    {@literal @}ForeignKeyField(model = State.class, constraint_name = "fk_publishers_states", references = "states", on_delete = Models.CASCADE)
 *     private State state;
 *     
 *     public static Manager objects = new Manager(Publisher.class);
 *     
 *     // Constructors
 *     public Publisher() {}
 *     
 *     public Publisher(String name, State state) {
 *         this.name = name;
 *         this.state = state;
 *     }
 *     
 *     public Publisher(String name, String address, State state) {
 *         this(name, state);
 *         this.address = address;
 *     }
 *     
 *     // Getters
 *     public String getName() {
 *         return name;
 *     }
 *     
 *     public String getAddress() {
 *         return address;
 *     }
 *     
 *     public State getState() {
 *         return state;
 *     }
 *     
 *     // Setters
 *     public void setName(String name) {
 *         this.name = name;
 *     }
 *     
 *     public void setAddress(String address) {
 *         this.address = address;
 *     }
 *     
 *     public void setState(State state) {
 *         this.state = state;
 *     }
 *     
 *     // Generated by Jedi ORM
 *    {@code public QuerySet<Book> getBookSet() {
 *         return Book.objects.getSet(Publisher.class, this.id);
 *     }}
 * }
 * </code>
 * </pre>
 * 
 * @author Thiago Monteiro
 * @version 1.0
 * @since 1.0
 * 
 * @see java.lang.Long
 * @see java.lang.String
 * 
 * @see jedi.db.models.CharField
 * @see jedi.db.models.ForeignKeyField
 * @see jedi.db.models.Manager
 * @see jedi.db.models.Model
 * @see jedi.db.models.QuerySet
 *
 * @see app.models.Book
 * @see app.models.State
 */
public class Publisher extends Model {
	
	// Attributes
	
	/**
	 * Número de versão da classe.
	 * 
	 * @see java.lang.Long
	 */
	private static final long serialVersionUID = -4632483608458698726L;

	/**
	 * Nome da editora.
	 * 
	 * @see java.lang.String
	 * 
	 * @see jedi.db.models.CharField
	 */
	@CharField(max_length = 30)
	private String name;

	/**
	 * Endereço da editora.
	 * 
	 * @see java.lang.String
	 * 
	 * @see jedi.db.models.CharField
	 */
	@CharField(max_length = 50, required = false)
	private String address;

	/**
	 * Estado da editora.
	 * 
	 * @see jedi.db.models.ForeignKeyField
	 * 
	 * @see app.models.State
	 */
	@ForeignKeyField(model = State.class, constraint_name = "fk_publishers_states", 
			references = "states", on_delete = Models.CASCADE)
	private State state;

	/**
	 * Gerenciador de consultas a objetos dessa classe 
     * persistidos em banco de dados.
     * 
     * @see jedi.db.models.Manager
	 */
	public static Manager objects = new Manager(Publisher.class);

	// Constructors
	
	/**
	 * Construtor padrão.
	 */
	public Publisher() {
	}

	/**
	 * Construtor que recebe o nome e o estado da editora.
	 * 
	 * @param name o nome da editora
	 * @param state o estado da editora
	 * 
	 * @see java.lang.String
	 * 
	 * @see app.models.State
	 */
	public Publisher(String name, State state) {
		this.name = name;
		this.state = state;
	}

	/**
	 * Construtor que recebe o nome, o endereço e o estado da editora.
	 * 
	 * @param name o nome da editora
	 * @param address o endereço da editora
	 * @param state o estado da editora
	 * 
	 * @see java.lang.String
	 * 
	 * @see app.models.State
	 */
	public Publisher(String name, String address, State state) {
		this(name, state);
		this.address = address;
	}

	// Getters
	
	/**
	 * Retorna o nome da editora.
	 * 
	 * @return o nome da editora
	 * 
	 * @see java.lang.String
	 */
	public String getName() {
		return name;
	}

	/**
	 * Retorna o endereço da editora.
	 * 
	 * @return o endereço da editora
	 * 
	 * @see java.lang.String
	 */
	public String getAddress() {
		return address;
	}

	/**
	 * Retorna o estado da editora.
	 * 
	 * @return o estado da editora
	 * 
	 * @see app.models.State
	 */
	public State getState() {
		return state;
	}

	// Setters
	
	/**
	 * Define o nome da editora.
	 * 
	 * @param name o nome da editora
	 * 
	 * @see java.lang.String
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Define o endereço da editora.
	 * 
	 * @param address o endereço da editora
	 * 
	 * @see java.lang.String
	 */
	public void setAddress(String address) {
		this.address = address;
	}

	/**
	 * Define o estado da editora.
	 * 
	 * @param state o estado da editora
	 * 
	 * @see app.models.State
	 */
	public void setState(State state) {
		this.state = state;
	}

	// Generated by Jedi ORM
	/**
	 * Retorna os livros publicados pela editora.
	 * 
	 * @return os livros publicados pela editora
	 * 
	 * @see jedi.db.models.QuerySet
	 * 
	 * @see app.models.Book
	 */
	public QuerySet<Book> getBookSet() {
		return Book.objects.getSet(Publisher.class, this.id);
	}
}
