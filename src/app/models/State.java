/***********************************************************************************************
 * @(#)State.java
 *
 * Version: 1.0
 *
 * Date: 2014/09/09
 *
 * Copyright (c) 2014 Thiago Alexandre Martins Monteiro.
 *
 * All rights reserved. This program and the accompanying materials are made 
 * available under the terms of the GNU Public License v2.0 which accompanies 
 * this distribution, and is available at http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
 *
 * Contributors:
 *    Thiago Alexandre Martins Monteiro - initial API and implementation
 ************************************************************************************************/

package app.models;

import jedi.db.models.CharField;
import jedi.db.models.ForeignKeyField;
import jedi.db.models.Manager;
import jedi.db.models.Model;
import jedi.db.models.QuerySet;

/**
 * <h2>Classe que modela um estado ou região de um país.</h2>
 * <h3>Código:</h3>
 * <pre>
 * <code class="java">
 * package app.models;
 *
 * import jedi.db.models.CharField;
 * import jedi.db.models.ForeignKeyField;
 * import jedi.db.models.Manager;
 * import jedi.db.models.Model;
 * import jedi.db.models.QuerySet;
 *
 * public class State extends Model {
 *
 *     // Attributes
 *     private static final long serialVersionUID = -6945954961476788586L;
 *
 *    {@literal @}CharField(max_length = 50, unique = true)
 *     private String name;
 *
 *    {@literal @}CharField(max_length = 2, unique = true)
 *     private String acronym;
 *
 *    {@literal @}CharField(max_length = 50, unique = true, required = false)
 *     private String capital;
 *
 *    {@literal @}ForeignKeyField
 *     private Country country;
 *
 *    {@literal @}CharField(max_length = 1, default_value = "A", comment = "Status (A - Active / I - Inactive)")
 *     private String status;
 *
 *     public static Manager objects = new Manager(State.class);
 *
 *     // Constructors
 *     public State() {}
 *
 *     public State(String name, String acronym, Country country) {
 *         this.name = name;
 *         this.acronym = acronym;
 *         this.country = country;
 *     }
 *
 *     public State(String name, String acronym, String capital, Country country) {
 *         this(name, acronym, country);
 *         this.capital = capital;
 *     }
 *
 *     public State(String name, String acronym, String capital, Country country, String status) {
 *         this(name, acronym, capital, country);
 *         this.status = status;
 *     }
 *
 *     // Getters
 *     public String getName() {
 *         return name;
 *     }
 *
 *     public String getAcronym() {
 *         return acronym;
 *     }
 *
 *     public String getCapital() {
 *         return capital;
 *     }
 *
 *     public Country getCountry() {
 *         return country;
 *     }
 *
 *     public String getStatus() {
 *         return status;
 *     }
 *
 *     // Setters
 *     public void setName(String name) {
 *         this.name = name;
 *     }
 *
 *     public void setAcronym(String acronym) {
 *         this.acronym = acronym;
 *     }
 *
 *     public void setCapital(String capital) {
 *         this.capital = capital;
 *     }
 *
 *     public void setCountry(Country country) {
 *         this.country = country;
 *     }
 *
 *     public void setStatus(String status) {
 *         this.status = status;
 *     }
 *
 *     // Generated by Jedi ORM
 *    {@code public QuerySet<Publisher> getPublisherSet() {
 *         return Publisher.objects.getSet(State.class, this.id);
 *     }}
 * }
 * </code>
 * </pre>
 *
 * @author Thiago Monteiro
 * @version 1.0
 * @since 1.0
 *
 * @see java.lang.Long
 * @see java.lang.String
 *
 * @see jedi.db.models.CharField
 * @see jedi.db.models.ForeignKeyField
 * @see jedi.db.models.Manager
 * @see jedi.db.models.Model
 * @see jedi.db.models.QuerySet
 *
 * @see app.models.Country
 * @see app.models.Publisher
 */
public class State extends Model {

    // Attributes

    /**
     * Número de versão da classe.
     *
     * @see java.lang.Long
     */
    private static final long serialVersionUID = -6945954961476788586L;

    /**
     * Nome do estado.
     *
     * @see java.lang.String
     *
     * @see jedi.db.models.CharField
     */
    @CharField(max_length = 50, unique = true)
    private String name;

    /**
     * Sigla do estado.
     *
     * @see java.lang.String
     *
     * @see jedi.db.models.CharField
     */
    @CharField(max_length = 2, unique = true)
    private String acronym;

    /**
     * Capital do estado.
     *
     * @see java.lang.String
     *
     * @see jedi.db.models.CharField
     */
    @CharField(max_length = 50, unique = true, required = false)
    private String capital;

    /**
     * País do estado.
     *
     * @see jedi.db.models.ForeignKeyField
     *
     * @see app.models.Country 
     */
    @ForeignKeyField
    private Country country;

    /**
     * Situação cadastral do estado.
     *
     * @see java.lang.String
     *
     * @see jedi.db.models.CharField
     */
    @CharField(max_length = 1, default_value = "A", comment = "Status (A - Active / I - Inactive)")
    private String status;

    /**
     * Gerenciador de consultas a objetos dessa classe 
     * persistidos em banco de dados.
     *
     * @see jedi.db.models.Manager
     */
    public static Manager objects = new Manager(State.class);

    // Constructors

    /**
     * Construtor padrão.
     */
    public State() {}

    /**
     * Construtor que recebe o nome, a sigla e o país do estado.
     *
     * @param name o nome do estado
     * @param acronym a sigla do estado
     * @param country o país do estado
     *
     * @see java.lang.String
     *
     * @see app.models.Country
     */
    public State(String name, String acronym, Country country) {
        this.name = name;
        this.acronym = acronym;
        this.country = country;
    }

    /**
     * Construtor que recebe o nome, a sigla, a capital e o país do estado.
     *
     * @param name o nome do estado
     * @param acronym a sigla do estado
     * @param capital a capital do estado
     * @param country o país do estado
     *
     * @see java.lang.String
     *
     * @see app.models.Country
     */
    public State(String name, String acronym, String capital, Country country) {
        this(name, acronym, country);
        this.capital = capital;
    }

    /**
     * Construtor que recebe o nome, a sigla, a capital, o país e a situação cadastral do estado.
     *
     * @param name o nome do estado
     * @param acronym a sigla do estado
     * @param capital a capital do estado
     * @param country o país do estado
     * @param status a situação cadastral do estado
     *
     * @see java.lang.String
     *
     * @see app.models.Country
     */
    public State(String name, String acronym, String capital, Country country, String status) {
        this(name, acronym, capital, country);
        this.status = status;
    }

    // Getters

    /**
     * Retorna o nome do estado.
     *
     * @return o nome do estado
     *
     * @see java.lang.String
     */
    public String getName() {
        return name;
    }

    /**
     * Retorna a sigla do estado.
     *
     * @return a sigla do estado
     *
     * @see java.lang.String
     */
    public String getAcronym() {
        return acronym;
    }

    /**
     * Retorna a capital do estado.
     *
     * @return a capital do estado
     *
     * @see java.lang.String
     */
    public String getCapital() {
        return capital;
    }

    /**
     * Retorna o país do estado.
     *
     * @return o país do estado
     *
     * @see app.models.Country
     */
    public Country getCountry() {
        return country;
    }

    /**
     * Retorna a situação cadastral do estado.
     *
     * @return a situação cadastral do estado
     *
     * @see java.lang.String
     */
    public String getStatus() {
        return status;
    }

    // Setters

    /**
     * Define o nome do estado.
     *
     * @param name o nome do estado
     *
     * @see java.lang.String
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Define a sigla do estado.
     *
     * @param acronym a sigla do estado
     *
     * @see java.lang.String
     */
    public void setAcronym(String acronym) {
        this.acronym = acronym;
    }

    /**
     * Define a capital do estado.
     *
     * @param capital a capital do estado
     *
     * @see java.lang.String
     */
    public void setCapital(String capital) {
        this.capital = capital;
    }

    /**
     * Define o país do estado.
     *
     * @param country o país do estado
     *
     * @see app.models.Country
     */
    public void setCountry(Country country) {
        this.country = country;
    }

    /**
     * Define a situação cadastral do estado.
     *
     * @param status a situação cadastral do estado
     *
     * @see java.lang.String
     */
    public void setStatus(String status) {
        this.status = status;
    }

    // Generated by Jedi ORM
    /**
     * Retorna as editoras localizadas no estado.
     *
     * @return as editoras localizadas no estado
     *
     * @see jedi.db.models.Queryset
     *
     * @see app.models.Publisher
     */
    public QuerySet<Publisher> getPublisherSet() {
        return Publisher.objects.getSet(State.class, this.id);
    }
}
